[[{"l":"About"},{"l":"Your tyrannical overlords"}],[{"l":"The Official phasetw0 Corporate Internal Active Directory Pentest Playbook and Knuckles"},{"i":"initial-access","l":"\uD83D\uDD0E Initial Access"},{"i":"lateral-movement-after-found-creds","l":"\uD83D\uDEA9 Lateral movement (after found creds)"},{"i":"next-steps-after-domain-admin","l":"\uD83D\uDD25 Next steps after Domain Admin"},{"i":"references","l":"\uD83D\uDCD5 References"}],[{"l":"Endpoint Detection Response Security and Bypass"},{"l":"Table of contents"},{"l":"Introduction"},{"l":"Assembly code"},{"l":"Windows architecture"},{"l":"Syscall or system call"},{"l":"User-mode and Kernel-mode"},{"l":"Remapping a clean DLL"},{"l":"Direct use of syscalls"},{"i":"introducing-hells-gate","l":"Introducing Hell's Gate"}],[{"l":"Section Code Injection"},{"l":"Introduction"},{"l":"Overview"},{"l":"Implementation"},{"l":"Step by step"},{"l":"Full code"},{"l":"References"}],[{"l":"Writing Optimized Windows Shellcode in C"},{"l":"Introduction"},{"l":"Benefits"},{"l":"Writing shellcode"},{"l":"Shellcode must be position independant"},{"l":"Your payload needs to resolve external references"},{"i":"your-payload-must-save-stack-and-register-state-upon-entry-and-restore-state-upon-exiting-the-shellcode","l":"Your payload must save stack and register state upon entry and restore state upon exiting the shellcode."},{"l":"GetProcAddressWithHash Function in C"},{"l":"ROTR32 is defined as a macro"},{"l":"Two structure definitions"},{"i":"there-is-a-different-method-of-getting-the-peb-address-depending-upon-the-processor-architecture-youre-targeting","l":"There is a different method of getting the PEB address depending upon the processor architecture you’re targeting"},{"l":"Get DLL function hash"},{"l":"Writing 1337 Messagebox shellcode"},{"l":"I had to manually define the function signatures for each Win32 API function"},{"i":"run-is-the-function-that-implements-the-primary-logic-of-the-shellcode","l":"\"Run\" is the function that implements the primary logic of the shellcode."},{"i":"suser32-smessageboxw-smsgcontent-and-smsgtitle-are-explicitly-defined-as-character-arrays","l":"\"sUser32\", \"sMessageBoxW\", \"sMsgContent\" and \"sMsgTitle\" are explicitly defined as character arrays."},{"l":"Compiling the shellcode"},{"l":"Linking the Shellcode"},{"l":"Extracting the shellcode"},{"l":"References"}],[{"l":"Complex numbers"},{"l":"Reminders and historical approach"},{"l":"Towards a new ensemble"},{"l":"New law"},{"l":"Construction of ℂ"},{"i":"operations-and-calculation-rules---properties","l":"Operations and calculation rules - properties"},{"l":"Geometric representation of ℂ"},{"l":"Square roots of complex numbers"}],[{"l":"Configuring the Windows 10 x64 Blue Screen of Death"},{"l":"Introduction"},{"i":"what-even-is-a-blue-screen-of-death","l":"What even is a \"Blue Screen of Death\"?"},{"i":"disassembling-ntoskrnlexe","l":"Disassembling ntoskrnl.exe"},{"l":"Writing a kernel level driver for Windows"},{"l":"Example"},{"l":"Remarks"},{"l":"References"}],[{"i":"uiuctf-2021---ceo-writeup","l":"UIUCTF 2021 - CEO Writeup"},{"l":"The Prompt"},{"l":"Initial Analysis"},{"l":"Original Rabbit Hole"},{"l":"Flag"},{"l":"Cracking the password"},{"l":"Closing Thoughts"},{"l":"Hit me up"}]]