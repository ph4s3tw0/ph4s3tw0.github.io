[[{"i":"nice-try-fbi-not-today-cia","l":"Nice try, FBI! Not today, CIA!"}],[{"l":"Section Code Injection"},{"l":"Introduction"},{"l":"Overview"},{"l":"Implementation"},{"l":"Step by step"},{"l":"Full code"},{"l":"References"}],[{"l":"Writing Optimized Windows Shellcode in C"},{"l":"Introduction"},{"l":"Benefits"},{"l":"Writing shellcode"},{"l":"Shellcode must be position independant"},{"l":"Your payload needs to resolve external references"},{"i":"your-payload-must-save-stack-and-register-state-upon-entry-and-restore-state-upon-exiting-the-shellcode","l":"Your payload must save stack and register state upon entry and restore state upon exiting the shellcode."},{"l":"GetProcAddressWithHash Function in C"},{"l":"ROTR32 is defined as a macro"},{"l":"Two structure definitions"},{"i":"there-is-a-different-method-of-getting-the-peb-address-depending-upon-the-processor-architecture-youre-targeting","l":"There is a different method of getting the PEB address depending upon the processor architecture youâ€™re targeting"},{"l":"Get DLL function hash"},{"l":"Writing 1337 Messagebox shellcode"},{"l":"I had to manually define the function signatures for each Win32 API function"},{"i":"run-is-the-function-that-implements-the-primary-logic-of-the-shellcode","l":"\"Run\" is the function that implements the primary logic of the shellcode."},{"i":"suser32-smessageboxw-smsgcontent-and-smsgtitle-are-explicitly-defined-as-character-arrays","l":"\"sUser32\", \"sMessageBoxW\", \"sMsgContent\" and \"sMsgTitle\" are explicitly defined as character arrays."},{"l":"Compiling the shellcode"},{"l":"Linking the Shellcode"},{"l":"Extracting the shellcode"},{"l":"References"}],[{"i":"imginaryctf---awkward_bypass-writeup","l":"ImginaryCTF - Awkward_Bypass Writeup"},{"l":"Introduction"},{"l":"Table of contents"},{"l":"Source code audit"},{"l":"SQL Injection"},{"l":"Blacklist"},{"l":"Setup"},{"l":"Setting up a makeshift SQLITE database"},{"l":"Observing the application"},{"l":"Observing how the web application responds to certain events"},{"l":"Trying to bypass the blacklist"},{"l":"Insecure regex match and replace"},{"i":"sql-injection-1","l":"SQL Injection"},{"l":"Testing if boolean is the correct way to go"},{"l":"Exploiting boolean SQLi to retrive flag from DB"}],[{"l":"About"},{"l":"Current members"}]]