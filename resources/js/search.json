[[{"l":"About"},{"l":"Your tyrannical overlords"}],[{"l":"The Official phasetw0 Corporate Internal Active Directory Pentest Playbook and Knuckles"},{"l":"Written by hypervis0r"},{"i":"initial-access","l":"\uD83D\uDD0E Initial Access"},{"l":"Identify Target Machines"},{"l":"Low hanging Fruit"},{"l":"Identify critical users"},{"i":"lateral-movement-after-found-creds","l":"\uD83D\uDEA9 Lateral movement (after found creds)"},{"l":"Check common Active Directory flaws"},{"i":"kerberoastingas-reproasting","l":"Kerberoasting/AS-REPRoasting"},{"l":"Pop shell to investigate"},{"i":"next-steps-after-domain-admin","l":"\uD83D\uDD25 Next steps after Domain Admin"},{"i":"opsec-these-steps-are-important","l":"OPSEC (These Steps are important!!!)"},{"l":"Persistence"},{"l":"Check for backups"},{"i":"enterprise-admin","l":"Enterprise Admin?"},{"i":"references","l":"\uD83D\uDCD5 References"}],[{"l":"Compiling LLVM with visual studio"},{"l":"Build"},{"l":"Prerequisites"},{"l":"Compile LLVM"},{"l":"Using llvm from within Visual Studio"},{"l":"Reverences"}],[{"l":"Endpoint Detection Response Security and Bypass"},{"l":"Table of contents"},{"l":"Introduction"},{"l":"Assembly code"},{"l":"Windows architecture"},{"l":"Syscall or system call"},{"l":"User-mode and Kernel-mode"},{"l":"Remapping a clean DLL"},{"l":"Direct use of syscalls"},{"i":"introducing-hells-gate","l":"Introducing Hell's Gate"}],[{"l":"Section Code Injection"},{"l":"Introduction"},{"l":"Overview"},{"l":"Implementation"},{"l":"Step by step"},{"l":"Full code"},{"l":"References"}],[{"l":"Writing Optimized Windows Shellcode in C"},{"l":"Introduction"},{"l":"Benefits"},{"l":"Writing shellcode"},{"l":"Shellcode must be position independant"},{"l":"Your payload needs to resolve external references"},{"i":"your-payload-must-save-stack-and-register-state-upon-entry-and-restore-state-upon-exiting-the-shellcode","l":"Your payload must save stack and register state upon entry and restore state upon exiting the shellcode."},{"l":"GetProcAddressWithHash Function in C"},{"l":"ROTR32 is defined as a macro"},{"l":"Two structure definitions"},{"i":"there-is-a-different-method-of-getting-the-peb-address-depending-upon-the-processor-architecture-youre-targeting","l":"There is a different method of getting the PEB address depending upon the processor architecture you’re targeting"},{"l":"Get DLL function hash"},{"l":"Writing 1337 Messagebox shellcode"},{"l":"I had to manually define the function signatures for each Win32 API function"},{"i":"run-is-the-function-that-implements-the-primary-logic-of-the-shellcode","l":"\"Run\" is the function that implements the primary logic of the shellcode."},{"i":"suser32-smessageboxw-smsgcontent-and-smsgtitle-are-explicitly-defined-as-character-arrays","l":"\"sUser32\", \"sMessageBoxW\", \"sMsgContent\" and \"sMsgTitle\" are explicitly defined as character arrays."},{"l":"Compiling the shellcode"},{"l":"Linking the Shellcode"},{"l":"Extracting the shellcode"},{"l":"References"}],[{"l":"Complex numbers"},{"l":"Reminders and historical approach"},{"l":"Towards a new ensemble"},{"l":"New law"},{"l":"Construction of ℂ"},{"i":"operations-and-calculation-rules---properties","l":"Operations and calculation rules - properties"},{"l":"Geometric representation of ℂ"},{"l":"Square roots of complex numbers"}],[{"l":"Configuring the Windows 10 x64 Blue Screen of Death"},{"l":"Written by hypervis0r"},{"l":"Introduction"},{"i":"what-even-is-a-blue-screen-of-death","l":"What even is a \"Blue Screen of Death\"?"},{"i":"disassembling-ntoskrnlexe","l":"Disassembling ntoskrnl.exe"},{"l":"Writing a kernel level driver for Windows"},{"l":"Example"},{"l":"Remarks"},{"l":"References"}],[{"i":"optimizing-windows-function-resolving-a-case-study-into-getprocaddress","l":"Optimizing Windows Function Resolving: A Case Study Into GetProcAddress"},{"l":"Written by hypervis0r and Jeff"},{"l":"Introduction"},{"i":"how-does-getprocaddress-work","l":"How does GetProcAddress work?"},{"i":"case-1-stock-getprocaddress","l":"Case 1: Stock GetProcAddress"},{"l":"Written by hypervis0r"},{"i":"update","l":"Update:"},{"l":"Results"},{"i":"case-2-custom-brute-force-hash-search","l":"Case 2: Custom Brute Force Hash Search"},{"i":"written-by-hypervis0r-1","l":"Written by hypervis0r"},{"i":"results-1","l":"Results"},{"i":"case-3-runtime-generated-hash-table","l":"Case 3: Runtime-Generated Hash Table"},{"i":"written-by-hypervis0r-2","l":"Written by hypervis0r"},{"i":"results-2","l":"Results"},{"i":"case-4-runtime-generated-stdunordered_map","l":"Case 4: Runtime-Generated std::unordered_map"},{"i":"written-by-hypervis0r-3","l":"Written by hypervis0r"},{"i":"results-3","l":"Results"},{"i":"case-5-binary-search","l":"Case 5: Binary Search"},{"l":"Written by Jeff"},{"i":"results-4","l":"Results"},{"i":"case-6-linker-generated-hash-table","l":"Case 6: Linker-Generated Hash Table"},{"i":"written-by-hypervis0r-4","l":"Written by hypervis0r"},{"i":"results-5","l":"Results"},{"l":"Conclusion"},{"l":"References"}],[{"i":"uiuctf-2021---ceo-writeup","l":"UIUCTF 2021 - CEO Writeup"},{"l":"The Prompt"},{"l":"Initial Analysis"},{"l":"Original Rabbit Hole"},{"l":"Flag"},{"l":"Cracking the password"},{"l":"Closing Thoughts"},{"l":"Hit me up"}]]